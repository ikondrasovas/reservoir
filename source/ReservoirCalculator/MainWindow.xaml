<Window x:Class="ReservoirCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Title="Volume Calculator"
        Height="450" Width="350" MinWidth="350" MinHeight="450"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen">

    <!--When MainWindows loads, the viewModel is initialized, loading
    default sample data and provided parameters-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializeCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid  Margin="20,20,20,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <Label Content="Volume" FontWeight="DemiBold"  FontSize="18"/>

            <!--A ViewBox is used here to automatically scale font size-->
            <!--The precision could also be retrieved from viewmodel instead-->
            <Label>
                <Viewbox Height="48" HorizontalAlignment="Left">
                    <TextBox BorderThickness="0" HorizontalContentAlignment="Left"
                    Text="{Binding Volume, StringFormat=N4, Mode=OneWay}"
                    FontSize="32"
                    FontWeight="DemiBold">
                    </TextBox>
                </Viewbox>
            </Label>


            <ComboBox
                Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
                Width="100" HorizontalAlignment="Left"
                ItemsSource="{Binding ComboBoxUnits}"
                DisplayMemberPath="Description"
                SelectedValuePath="VolumeUnit"
                SelectedValue="{Binding SelectedVolumeUnit}"
                IsReadOnly="True"/>

        </StackPanel>
        <Grid  Grid.Row="1" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="buttonCalculate"
                    Content="Calculate"
                    Width="100" Height="40"
                    VerticalAlignment="Bottom"
                    Command="{Binding CalculateCommand}"
                    Grid.Column="1">

                <!--If there is an error loading the dataset,
                do not enable calculate button-->
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="FontSize" Value="20"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasError}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasError}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Label 
                Margin="0,0,10,0"
                HorizontalContentAlignment="Right"
                VerticalAlignment="Bottom"
                Grid.Column="0">
                <TextBlock TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding StatusMessage}"/>
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasError}" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasError}" Value="False">
                                <Setter Property="Foreground" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </Grid>
</Window>
